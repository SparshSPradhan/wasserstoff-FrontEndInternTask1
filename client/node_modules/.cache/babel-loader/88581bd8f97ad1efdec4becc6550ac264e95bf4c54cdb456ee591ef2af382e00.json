{"ast":null,"code":"// import React from 'react';\n// import { useSocket } from './context/SocketContext';\n// import Login from './components/Login';\n// import Header from './components/Header';\n// import Editor from './components/Editor';\n// import UserList from './components/UserList';\n// import './styles/App.css';\n// const App: React.FC = () => {\n//   const { isConnected } = useSocket();\n//   return (\n//     <div className=\"app\">\n//       {!isConnected ? (\n//         <Login />\n//       ) : (\n//         <>\n//           <Header />\n//           <div className=\"main-content\">\n//             <Editor />\n//             <UserList />\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n// export default App;\nimport React,{useState}from'react';import{useSocket}from'./context/SocketContext';import Login from'./components/Login';import Header from'./components/Header';import Editor from'./components/Editor';import UserList from'./components/UserList';import Chat from'./components/Chat';import ChangeLog from'./components/ChangeLog';import'./styles/App.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const{isConnected}=useSocket();const[isDarkMode,setIsDarkMode]=useState(false);const toggleTheme=()=>{setIsDarkMode(prev=>!prev);document.body.classList.toggle('dark-mode');};return/*#__PURE__*/_jsx(\"div\",{className:`app ${isDarkMode?'dark-mode':''}`,children:!isConnected?/*#__PURE__*/_jsx(Login,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{toggleTheme:toggleTheme,isDarkMode:isDarkMode}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(Editor,{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Chat,{}),/*#__PURE__*/_jsx(UserList,{}),/*#__PURE__*/_jsx(ChangeLog,{})]})]})]})});};export default App;","map":{"version":3,"names":["React","useState","useSocket","Login","Header","Editor","UserList","Chat","ChangeLog","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","isConnected","isDarkMode","setIsDarkMode","toggleTheme","prev","document","body","classList","toggle","className","children"],"sources":["/Users/sparshs.pradhan/collaborative-editor/client/src/App.tsx"],"sourcesContent":["// import React from 'react';\n// import { useSocket } from './context/SocketContext';\n// import Login from './components/Login';\n// import Header from './components/Header';\n// import Editor from './components/Editor';\n// import UserList from './components/UserList';\n// import './styles/App.css';\n\n\n// const App: React.FC = () => {\n//   const { isConnected } = useSocket();\n\n//   return (\n//     <div className=\"app\">\n//       {!isConnected ? (\n//         <Login />\n//       ) : (\n//         <>\n//           <Header />\n//           <div className=\"main-content\">\n//             <Editor />\n//             <UserList />\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\nimport React, { useState } from 'react';\nimport { useSocket } from './context/SocketContext';\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport Editor from './components/Editor';\nimport UserList from './components/UserList';\nimport Chat from './components/Chat';\nimport ChangeLog from './components/ChangeLog';\nimport './styles/App.css';\n\nconst App: React.FC = () => {\n  const { isConnected } = useSocket();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  return (\n    <div className={`app ${isDarkMode ? 'dark-mode' : ''}`}>\n      {!isConnected ? (\n        <Login />\n      ) : (\n        <>\n          <Header toggleTheme={toggleTheme} isDarkMode={isDarkMode} />\n          <div className=\"main-content\">\n            <Editor />\n            <div>\n              <Chat />\n              <UserList />\n              <ChangeLog />\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,KAAQ,yBAAyB,CACnD,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1B,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAEC,WAAY,CAAC,CAAGd,SAAS,CAAC,CAAC,CACnC,KAAM,CAACe,UAAU,CAAEC,aAAa,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAkB,WAAW,CAAGA,CAAA,GAAM,CACxBD,aAAa,CAACE,IAAI,EAAI,CAACA,IAAI,CAAC,CAC5BC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC,CAC7C,CAAC,CAED,mBACEd,IAAA,QAAKe,SAAS,CAAE,OAAOR,UAAU,CAAG,WAAW,CAAG,EAAE,EAAG,CAAAS,QAAA,CACpD,CAACV,WAAW,cACXN,IAAA,CAACP,KAAK,GAAE,CAAC,cAETS,KAAA,CAAAE,SAAA,EAAAY,QAAA,eACEhB,IAAA,CAACN,MAAM,EAACe,WAAW,CAAEA,WAAY,CAACF,UAAU,CAAEA,UAAW,CAAE,CAAC,cAC5DL,KAAA,QAAKa,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BhB,IAAA,CAACL,MAAM,GAAE,CAAC,cACVO,KAAA,QAAAc,QAAA,eACEhB,IAAA,CAACH,IAAI,GAAE,CAAC,cACRG,IAAA,CAACJ,QAAQ,GAAE,CAAC,cACZI,IAAA,CAACF,SAAS,GAAE,CAAC,EACV,CAAC,EACH,CAAC,EACN,CACH,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAO,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}