{"ast":null,"code":"var _jsxFileName = \"/Users/sparshs.pradhan/collaborative-editor/client/src/components/Editor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSocket } from '../context/SocketContext';\nimport CursorOverlay from './CursorOverlay';\nimport '../styles/Editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = () => {\n  _s();\n  const {\n    documentState,\n    updateContent,\n    updateCursorPosition\n  } = useSocket();\n  const [content, setContent] = useState('');\n  const editorRef = useRef(null);\n\n  // Update local content when document state changes\n  useEffect(() => {\n    if (documentState !== null && documentState !== void 0 && documentState.content) {\n      setContent(documentState.content);\n    }\n  }, [documentState]);\n\n  // Handle content changes\n  const handleContentChange = e => {\n    const newContent = e.currentTarget.innerText;\n    setContent(newContent);\n    updateContent(newContent);\n  };\n\n  // Track cursor position\n  const handleCursorPosition = () => {\n    const selection = window.getSelection();\n    if (!selection || !selection.anchorNode || !editorRef.current) return;\n\n    // Get the text up to the cursor\n    const range = selection.getRangeAt(0);\n    const preCaretRange = range.cloneRange();\n    preCaretRange.selectNodeContents(editorRef.current);\n    preCaretRange.setEnd(range.endContainer, range.endOffset);\n    const textBeforeCaret = preCaretRange.toString();\n\n    // Calculate line and character position\n    const lines = textBeforeCaret.split('\\n');\n    const line = lines.length - 1;\n    const ch = lines[lines.length - 1].length;\n    updateCursorPosition({\n      line,\n      ch\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: editorRef,\n      className: \"editor-area\",\n      contentEditable: true,\n      suppressContentEditableWarning: true,\n      onInput: handleContentChange,\n      onKeyUp: handleCursorPosition,\n      onMouseUp: handleCursorPosition,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CursorOverlay, {\n      editorRef: editorRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Editor, \"PthR2iFkvtl75jD/jfBqZSsSVt8=\", false, function () {\n  return [useSocket];\n});\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useSocket","CursorOverlay","jsxDEV","_jsxDEV","Editor","_s","documentState","updateContent","updateCursorPosition","content","setContent","editorRef","handleContentChange","e","newContent","currentTarget","innerText","handleCursorPosition","selection","window","getSelection","anchorNode","current","range","getRangeAt","preCaretRange","cloneRange","selectNodeContents","setEnd","endContainer","endOffset","textBeforeCaret","toString","lines","split","line","length","ch","className","children","ref","contentEditable","suppressContentEditableWarning","onInput","onKeyUp","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sparshs.pradhan/collaborative-editor/client/src/components/Editor.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useSocket } from '../context/SocketContext';\nimport CursorOverlay from './CursorOverlay';\nimport '../styles/Editor.css';\n\nconst Editor: React.FC = () => {\n  const { documentState, updateContent, updateCursorPosition } = useSocket();\n  const [content, setContent] = useState<string>('');\n  const editorRef = useRef<HTMLDivElement>(null);\n  \n  // Update local content when document state changes\n  useEffect(() => {\n    if (documentState?.content) {\n      setContent(documentState.content);\n    }\n  }, [documentState]);\n\n  // Handle content changes\n  const handleContentChange = (e: React.FormEvent<HTMLDivElement>) => {\n    const newContent = e.currentTarget.innerText;\n    setContent(newContent);\n    updateContent(newContent);\n  };\n\n  // Track cursor position\n  const handleCursorPosition = () => {\n    const selection = window.getSelection();\n    if (!selection || !selection.anchorNode || !editorRef.current) return;\n\n    // Get the text up to the cursor\n    const range = selection.getRangeAt(0);\n    const preCaretRange = range.cloneRange();\n    preCaretRange.selectNodeContents(editorRef.current);\n    preCaretRange.setEnd(range.endContainer, range.endOffset);\n    const textBeforeCaret = preCaretRange.toString();\n\n    // Calculate line and character position\n    const lines = textBeforeCaret.split('\\n');\n    const line = lines.length - 1;\n    const ch = lines[lines.length - 1].length;\n\n    updateCursorPosition({ line, ch });\n  };\n\n  return (\n    <div className=\"editor-container\">\n      <div \n        ref={editorRef}\n        className=\"editor-area\"\n        contentEditable={true}\n        suppressContentEditableWarning={true}\n        onInput={handleContentChange}\n        onKeyUp={handleCursorPosition}\n        onMouseUp={handleCursorPosition}\n      >\n        {content}\n      </div>\n      <CursorOverlay editorRef={editorRef} />\n    </div>\n  );\n};\n\nexport default Editor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}