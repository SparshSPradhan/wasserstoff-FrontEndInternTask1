{"ast":null,"code":"var _jsxFileName = \"/Users/sparshs.pradhan/collaborative-editor/client/src/context/SocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// client/src/context/SocketContext.tsx\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  socket: null,\n  isConnected: false,\n  documentState: null,\n  currentUser: null,\n  users: [],\n  connectToServer: () => {},\n  updateContent: () => {},\n  updateCursorPosition: () => {}\n};\nconst SocketContext = /*#__PURE__*/createContext(defaultState);\nexport const useSocket = () => {\n  _s();\n  return useContext(SocketContext);\n};\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [documentState, setDocumentState] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const connectToServer = (username, color) => {\n    // Add reconnection options for more robust connections\n    const newSocket = io('http://localhost:5001', {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n\n      // Make sure the socket ID is available\n      if (newSocket.id) {\n        const user = {\n          id: newSocket.id,\n          name: username,\n          color: color\n        };\n        setCurrentUser(user);\n        newSocket.emit('join', {\n          name: username,\n          color\n        });\n      } else {\n        console.error(\"Socket ID is undefined on connection\");\n      }\n    });\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n    });\n    newSocket.on('init-document', doc => {\n      setDocumentState(doc);\n      setUsers(doc.users);\n    });\n    newSocket.on('user-joined', updatedUsers => {\n      setUsers(updatedUsers);\n    });\n    newSocket.on('user-left', updatedUsers => {\n      setUsers(updatedUsers);\n    });\n    newSocket.on('content-change', data => {\n      setDocumentState(prev => prev ? {\n        ...prev,\n        content: data.content\n      } : null);\n    });\n    newSocket.on('cursor-update', data => {\n      setUsers(prev => {\n        return prev.map(user => {\n          if (user.id === data.userId) {\n            return {\n              ...user,\n              cursorPosition: data.position\n            };\n          }\n          return user;\n        });\n      });\n    });\n  };\n  const updateContent = content => {\n    if (socket && isConnected && socket.id) {\n      socket.emit('content-change', content);\n      setDocumentState(prev => prev ? {\n        ...prev,\n        content\n      } : null);\n    }\n  };\n  const updateCursorPosition = position => {\n    if (socket && isConnected && currentUser && socket.id) {\n      socket.emit('cursor-move', position);\n      setCurrentUser({\n        ...currentUser,\n        cursorPosition: position\n      });\n    }\n  };\n  const [changes, setChanges] = useState([]);\n  socket.on('content-change', data => {\n    setDocumentState(prev => ({\n      ...prev,\n      content: data.content\n    }));\n    setChanges(prev => [...prev, {\n      userId: data.userId,\n      description: data.changeDescription,\n      timestamp: new Date()\n    }].slice(-10)); // Keep last 10 changes\n  });\n  useEffect(() => {\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      isConnected,\n      documentState,\n      currentUser,\n      users,\n      connectToServer,\n      updateContent,\n      updateCursorPosition\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"gmHR5xkENGewLHuKNXOTSodJBF8=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","defaultState","socket","isConnected","documentState","currentUser","users","connectToServer","updateContent","updateCursorPosition","SocketContext","useSocket","_s","SocketProvider","children","_s2","setSocket","setIsConnected","setDocumentState","setCurrentUser","setUsers","username","color","newSocket","reconnection","reconnectionAttempts","reconnectionDelay","on","id","user","name","emit","console","error","doc","updatedUsers","data","prev","content","map","userId","cursorPosition","position","changes","setChanges","description","changeDescription","timestamp","Date","slice","disconnect","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sparshs.pradhan/collaborative-editor/client/src/context/SocketContext.tsx"],"sourcesContent":["// client/src/context/SocketContext.tsx\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io, { Socket } from 'socket.io-client';\nimport { User, DocumentState } from '../types';\n\ninterface SocketContextType {\n  socket: Socket | null;\n  isConnected: boolean;\n  documentState: DocumentState | null;\n  currentUser: User | null;\n  users: User[];\n  connectToServer: (username: string, color: string) => void;\n  updateContent: (content: string) => void;\n  updateCursorPosition: (position: { line: number; ch: number }) => void;\n}\n\nconst defaultState: SocketContextType = {\n  socket: null,\n  isConnected: false,\n  documentState: null,\n  currentUser: null,\n  users: [],\n  connectToServer: () => {},\n  updateContent: () => {},\n  updateCursorPosition: () => {},\n};\n\nconst SocketContext = createContext<SocketContextType>(defaultState);\n\nexport const useSocket = () => useContext(SocketContext);\n\nexport const SocketProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [documentState, setDocumentState] = useState<DocumentState | null>(null);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [users, setUsers] = useState<User[]>([]);\n\n  const connectToServer = (username: string, color: string) => {\n    // Add reconnection options for more robust connections\n    const newSocket = io('http://localhost:5001', {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    setSocket(newSocket);\n\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      \n      // Make sure the socket ID is available\n      if (newSocket.id) {\n        const user: User = {\n          id: newSocket.id,\n          name: username,\n          color: color\n        };\n        \n        setCurrentUser(user);\n        newSocket.emit('join', { name: username, color });\n      } else {\n        console.error(\"Socket ID is undefined on connection\");\n      }\n    });\n\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n    });\n\n    newSocket.on('init-document', (doc: DocumentState) => {\n      setDocumentState(doc);\n      setUsers(doc.users);\n    });\n\n    newSocket.on('user-joined', (updatedUsers: User[]) => {\n      setUsers(updatedUsers);\n    });\n\n    newSocket.on('user-left', (updatedUsers: User[]) => {\n      setUsers(updatedUsers);\n    });\n\n    newSocket.on('content-change', (data: { content: string; userId: string }) => {\n      setDocumentState(prev => prev ? { ...prev, content: data.content } : null);\n    });\n\n    newSocket.on('cursor-update', (data: { userId: string; position: { line: number; ch: number } }) => {\n      setUsers(prev => {\n        return prev.map(user => {\n          if (user.id === data.userId) {\n            return { ...user, cursorPosition: data.position };\n          }\n          return user;\n        });\n      });\n    });\n  };\n\n  const updateContent = (content: string) => {\n    if (socket && isConnected && socket.id) {\n      socket.emit('content-change', content);\n      setDocumentState(prev => prev ? { ...prev, content } : null);\n    }\n  };\n\n  const updateCursorPosition = (position: { line: number; ch: number }) => {\n    if (socket && isConnected && currentUser && socket.id) {\n      socket.emit('cursor-move', position);\n      setCurrentUser({ ...currentUser, cursorPosition: position });\n    }\n  };\n  const [changes, setChanges] = useState<{ userId: string; description: string; timestamp: Date }[]>([]);\nsocket.on('content-change', (data) => {\n  setDocumentState(prev => ({ ...prev, content: data.content }));\n  setChanges(prev => [\n    ...prev,\n    { userId: data.userId, description: data.changeDescription, timestamp: new Date() },\n  ].slice(-10)); // Keep last 10 changes\n});\n\n  useEffect(() => {\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, [socket]);\n\n  return (\n    <SocketContext.Provider\n      value={{\n        socket,\n        isConnected,\n        documentState,\n        currentUser,\n        users,\n        connectToServer,\n        updateContent,\n        updateCursorPosition,\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}