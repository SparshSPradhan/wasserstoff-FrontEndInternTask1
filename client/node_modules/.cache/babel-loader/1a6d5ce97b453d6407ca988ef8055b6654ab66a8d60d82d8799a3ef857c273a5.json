{"ast":null,"code":"var _jsxFileName = \"/Users/sparshs.pradhan/collaborative-editor/client/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useSocket } from './context/SocketContext';\n// import Login from './components/Login';\n// import Header from './components/Header';\n// import Editor from './components/Editor';\n// import UserList from './components/UserList';\n// import './styles/App.css';\n\n// const App: React.FC = () => {\n//   const { isConnected } = useSocket();\n\n//   return (\n//     <div className=\"app\">\n//       {!isConnected ? (\n//         <Login />\n//       ) : (\n//         <>\n//           <Header />\n//           <div className=\"main-content\">\n//             <Editor />\n//             <UserList />\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { useSocket } from './context/SocketContext';\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport Editor from './components/Editor';\nimport UserList from './components/UserList';\nimport Chat from './components/Chat';\nimport ChangeLog from './components/ChangeLog';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    isConnected\n  } = useSocket();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n    document.body.classList.toggle('dark-mode');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${isDarkMode ? 'dark-mode' : ''}`,\n    children: !isConnected ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        toggleTheme: toggleTheme,\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChangeLog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oeeax0oiKpy1BoR5+6qncPH8I0c=\", false, function () {\n  return [useSocket];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useSocket","Login","Header","Editor","UserList","Chat","ChangeLog","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isConnected","isDarkMode","setIsDarkMode","toggleTheme","prev","document","body","classList","toggle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sparshs.pradhan/collaborative-editor/client/src/App.tsx"],"sourcesContent":["// import React from 'react';\n// import { useSocket } from './context/SocketContext';\n// import Login from './components/Login';\n// import Header from './components/Header';\n// import Editor from './components/Editor';\n// import UserList from './components/UserList';\n// import './styles/App.css';\n\n\n// const App: React.FC = () => {\n//   const { isConnected } = useSocket();\n\n//   return (\n//     <div className=\"app\">\n//       {!isConnected ? (\n//         <Login />\n//       ) : (\n//         <>\n//           <Header />\n//           <div className=\"main-content\">\n//             <Editor />\n//             <UserList />\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\nimport React, { useState } from 'react';\nimport { useSocket } from './context/SocketContext';\nimport Login from './components/Login';\nimport Header from './components/Header';\nimport Editor from './components/Editor';\nimport UserList from './components/UserList';\nimport Chat from './components/Chat';\nimport ChangeLog from './components/ChangeLog';\nimport './styles/App.css';\n\nconst App: React.FC = () => {\n  const { isConnected } = useSocket();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n    document.body.classList.toggle('dark-mode');\n  };\n\n  return (\n    <div className={`app ${isDarkMode ? 'dark-mode' : ''}`}>\n      {!isConnected ? (\n        <Login />\n      ) : (\n        <>\n          <Header toggleTheme={toggleTheme} isDarkMode={isDarkMode} />\n          <div className=\"main-content\">\n            <Editor />\n            <div>\n              <Chat />\n              <UserList />\n              <ChangeLog />\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAY,CAAC,GAAGb,SAAS,CAAC,CAAC;EACnC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMiB,WAAW,GAAGA,CAAA,KAAM;IACxBD,aAAa,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;IAC5BC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;EAC7C,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAE,OAAOR,UAAU,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAS,QAAA,EACpD,CAACV,WAAW,gBACXL,OAAA,CAACP,KAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAETnB,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA,CAACN,MAAM;QAACc,WAAW,EAAEA,WAAY;QAACF,UAAU,EAAEA;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DnB,OAAA;QAAKc,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3Bf,OAAA,CAACL,MAAM;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACVnB,OAAA;UAAAe,QAAA,gBACEf,OAAA,CAACH,IAAI;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACRnB,OAAA,CAACJ,QAAQ;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACZnB,OAAA,CAACF,SAAS;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACN;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BID,GAAa;EAAA,QACOX,SAAS;AAAA;AAAA4B,EAAA,GAD7BjB,GAAa;AA8BnB,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}