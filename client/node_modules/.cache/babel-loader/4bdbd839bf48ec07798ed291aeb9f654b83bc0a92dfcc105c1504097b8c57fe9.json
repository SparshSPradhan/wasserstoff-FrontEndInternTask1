{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import io from'socket.io-client';import{jsx as _jsx}from\"react/jsx-runtime\";const defaultState={socket:null,isConnected:false,documentState:null,currentUser:null,users:[],messages:[],changes:[],connectToServer:()=>{},updateContent:()=>{},updateCursorPosition:()=>{},sendMessage:()=>{}};const SocketContext=/*#__PURE__*/createContext(defaultState);export const useSocket=()=>useContext(SocketContext);export const SocketProvider=_ref=>{let{children}=_ref;const[socket,setSocket]=useState(null);const[isConnected,setIsConnected]=useState(false);const[documentState,setDocumentState]=useState(null);const[currentUser,setCurrentUser]=useState(null);const[users,setUsers]=useState([]);const[messages,setMessages]=useState([]);const[changes,setChanges]=useState([]);const connectToServer=(username,color)=>{const newSocket=io('http://localhost:5001',{reconnection:true,reconnectionAttempts:5,reconnectionDelay:1000});setSocket(newSocket);newSocket.on('connect',()=>{setIsConnected(true);if(newSocket.id){const user={id:newSocket.id,name:username,color:color};setCurrentUser(user);newSocket.emit('join',{name:username,color});}else{console.error('Socket ID is undefined on connection');}});newSocket.on('disconnect',()=>{setIsConnected(false);});newSocket.on('init',data=>{setDocumentState(data.document);setUsers(data.document.users);setMessages(data.messages);setChanges(data.document.changes);});newSocket.on('user-joined',updatedUsers=>{setUsers(updatedUsers);});newSocket.on('user-left',updatedUsers=>{setUsers(updatedUsers);});newSocket.on('content-change',data=>{setDocumentState(prev=>prev?{...prev,content:data.content}:null);setChanges(prev=>[...prev,{userId:data.userId,description:data.changeDescription,timestamp:new Date()}].slice(-10));});newSocket.on('cursor-update',data=>{setUsers(prev=>{return prev.map(user=>{if(user.id===data.userId){return{...user,cursorPosition:data.position};}return user;});});});newSocket.on('new-message',message=>{setMessages(prev=>[...prev,message]);});};const updateContent=content=>{if(socket&&isConnected&&socket.id){socket.emit('content-change',content);setDocumentState(prev=>prev?{...prev,content}:null);}};const updateCursorPosition=position=>{if(socket&&isConnected&&currentUser&&socket.id){socket.emit('cursor-move',position);setCurrentUser({...currentUser,cursorPosition:position});}};const sendMessage=text=>{if(socket&&isConnected&&text.trim()){socket.emit('send-message',text);}};useEffect(()=>{return()=>{if(socket){socket.disconnect();}};},[socket]);return/*#__PURE__*/_jsx(SocketContext.Provider,{value:{socket,isConnected,documentState,currentUser,users,messages,changes,connectToServer,updateContent,updateCursorPosition,sendMessage},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsx","_jsx","defaultState","socket","isConnected","documentState","currentUser","users","messages","changes","connectToServer","updateContent","updateCursorPosition","sendMessage","SocketContext","useSocket","SocketProvider","_ref","children","setSocket","setIsConnected","setDocumentState","setCurrentUser","setUsers","setMessages","setChanges","username","color","newSocket","reconnection","reconnectionAttempts","reconnectionDelay","on","id","user","name","emit","console","error","data","document","updatedUsers","prev","content","userId","description","changeDescription","timestamp","Date","slice","map","cursorPosition","position","message","text","trim","disconnect","Provider","value"],"sources":["/Users/sparshs.pradhan/collaborative-editor/client/src/context/SocketContext.tsx"],"sourcesContent":["\n\n\n\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io, { Socket } from 'socket.io-client';\nimport { User, DocumentState, ChatMessage, Change } from '../types';\n\ninterface SocketContextType {\n  socket: Socket | null;\n  isConnected: boolean;\n  documentState: DocumentState | null;\n  currentUser: User | null;\n  users: User[];\n  messages: ChatMessage[];\n  changes: Change[];\n  connectToServer: (username: string, color: string) => void;\n  updateContent: (content: string) => void;\n  updateCursorPosition: (position: { line: number; ch: number }) => void;\n  sendMessage: (text: string) => void;\n}\n\nconst defaultState: SocketContextType = {\n  socket: null,\n  isConnected: false,\n  documentState: null,\n  currentUser: null,\n  users: [],\n  messages: [],\n  changes: [],\n  connectToServer: () => {},\n  updateContent: () => {},\n  updateCursorPosition: () => {},\n  sendMessage: () => {},\n};\n\nconst SocketContext = createContext<SocketContextType>(defaultState);\n\nexport const useSocket = () => useContext(SocketContext);\n\nexport const SocketProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [documentState, setDocumentState] = useState<DocumentState | null>(null);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [users, setUsers] = useState<User[]>([]);\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [changes, setChanges] = useState<Change[]>([]);\n\n  const connectToServer = (username: string, color: string) => {\n    const newSocket = io('http://localhost:5001', {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n    });\n    setSocket(newSocket);\n\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      if (newSocket.id) {\n        const user: User = {\n          id: newSocket.id,\n          name: username,\n          color: color,\n        };\n        setCurrentUser(user);\n        newSocket.emit('join', { name: username, color });\n      } else {\n        console.error('Socket ID is undefined on connection');\n      }\n    });\n\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n    });\n\n    newSocket.on('init', (data: { document: DocumentState; messages: ChatMessage[] }) => {\n      setDocumentState(data.document);\n      setUsers(data.document.users);\n      setMessages(data.messages);\n      setChanges(data.document.changes);\n    });\n\n    newSocket.on('user-joined', (updatedUsers: User[]) => {\n      setUsers(updatedUsers);\n    });\n\n    newSocket.on('user-left', (updatedUsers: User[]) => {\n      setUsers(updatedUsers);\n    });\n\n    newSocket.on('content-change', (data: { content: string; userId: string; changeDescription: string }) => {\n      setDocumentState(prev => (prev ? { ...prev, content: data.content } : null));\n      setChanges(prev => [\n        ...prev,\n        { userId: data.userId, description: data.changeDescription, timestamp: new Date() },\n      ].slice(-10));\n    });\n\n    newSocket.on('cursor-update', (data: { userId: string; position: { line: number; ch: number } }) => {\n      setUsers(prev => {\n        return prev.map(user => {\n          if (user.id === data.userId) {\n            return { ...user, cursorPosition: data.position };\n          }\n          return user;\n        });\n      });\n    });\n\n    newSocket.on('new-message', (message: ChatMessage) => {\n      setMessages(prev => [...prev, message]);\n    });\n  };\n\n  const updateContent = (content: string) => {\n    if (socket && isConnected && socket.id) {\n      socket.emit('content-change', content);\n      setDocumentState(prev => (prev ? { ...prev, content } : null));\n    }\n  };\n\n  const updateCursorPosition = (position: { line: number; ch: number }) => {\n    if (socket && isConnected && currentUser && socket.id) {\n      socket.emit('cursor-move', position);\n      setCurrentUser({ ...currentUser, cursorPosition: position });\n    }\n  };\n\n  const sendMessage = (text: string) => {\n    if (socket && isConnected && text.trim()) {\n      socket.emit('send-message', text);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, [socket]);\n\n  return (\n    <SocketContext.Provider\n      value={{\n        socket,\n        isConnected,\n        documentState,\n        currentUser,\n        users,\n        messages,\n        changes,\n        connectToServer,\n        updateContent,\n        updateCursorPosition,\n        sendMessage,\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}