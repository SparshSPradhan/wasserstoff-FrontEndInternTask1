{"ast":null,"code":"var _jsxFileName = \"/Users/sparshs.pradhan/collaborative-editor/client/src/context/SocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  socket: null,\n  isConnected: false,\n  documentState: null,\n  currentUser: null,\n  users: [],\n  connectToServer: () => {},\n  updateContent: () => {},\n  updateCursorPosition: () => {}\n};\nconst SocketContext = /*#__PURE__*/createContext(defaultState);\nexport const useSocket = () => {\n  _s();\n  return useContext(SocketContext);\n};\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [documentState, setDocumentState] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const connectToServer = (username, color) => {\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      const user = {\n        id: newSocket.id,\n        name: username,\n        color: color\n      };\n      setCurrentUser(user);\n      newSocket.emit('join', {\n        name: username,\n        color\n      });\n    });\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n    });\n    newSocket.on('init-document', doc => {\n      setDocumentState(doc);\n      setUsers(doc.users);\n    });\n    newSocket.on('user-joined', updatedUsers => {\n      setUsers(updatedUsers);\n    });\n    newSocket.on('user-left', updatedUsers => {\n      setUsers(updatedUsers);\n    });\n    newSocket.on('content-change', data => {\n      setDocumentState(prev => prev ? {\n        ...prev,\n        content: data.content\n      } : null);\n    });\n    newSocket.on('cursor-update', data => {\n      setUsers(prev => {\n        return prev.map(user => {\n          if (user.id === data.userId) {\n            return {\n              ...user,\n              cursorPosition: data.position\n            };\n          }\n          return user;\n        });\n      });\n    });\n  };\n  const updateContent = content => {\n    if (socket && isConnected) {\n      socket.emit('content-change', content);\n      setDocumentState(prev => prev ? {\n        ...prev,\n        content\n      } : null);\n    }\n  };\n  const updateCursorPosition = position => {\n    if (socket && isConnected && currentUser) {\n      socket.emit('cursor-move', position);\n      setCurrentUser({\n        ...currentUser,\n        cursorPosition: position\n      });\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      isConnected,\n      documentState,\n      currentUser,\n      users,\n      connectToServer,\n      updateContent,\n      updateCursorPosition\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"AkhvHMCQ+ozzRsB4UFjOy0XpzL0=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","defaultState","socket","isConnected","documentState","currentUser","users","connectToServer","updateContent","updateCursorPosition","SocketContext","useSocket","_s","SocketProvider","children","_s2","setSocket","setIsConnected","setDocumentState","setCurrentUser","setUsers","username","color","newSocket","on","user","id","name","emit","doc","updatedUsers","data","prev","content","map","userId","cursorPosition","position","disconnect","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sparshs.pradhan/collaborative-editor/client/src/context/SocketContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport io, { Socket } from 'socket.io-client';\nimport { User, DocumentState } from '../types';\n\ninterface SocketContextType {\n  socket: Socket | null;\n  isConnected: boolean;\n  documentState: DocumentState | null;\n  currentUser: User | null;\n  users: User[];\n  connectToServer: (username: string, color: string) => void;\n  updateContent: (content: string) => void;\n  updateCursorPosition: (position: { line: number; ch: number }) => void;\n}\n\nconst defaultState: SocketContextType = {\n  socket: null,\n  isConnected: false,\n  documentState: null,\n  currentUser: null,\n  users: [],\n  connectToServer: () => {},\n  updateContent: () => {},\n  updateCursorPosition: () => {},\n};\n\nconst SocketContext = createContext<SocketContextType>(defaultState);\n\nexport const useSocket = () => useContext(SocketContext);\n\nexport const SocketProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [documentState, setDocumentState] = useState<DocumentState | null>(null);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [users, setUsers] = useState<User[]>([]);\n\n  const connectToServer = (username: string, color: string) => {\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n\n    newSocket.on('connect', () => {\n      setIsConnected(true);\n      \n      const user: User = {\n        id: newSocket.id,\n        name: username,\n        color: color\n      };\n      \n      setCurrentUser(user);\n      newSocket.emit('join', { name: username, color });\n    });\n\n    newSocket.on('disconnect', () => {\n      setIsConnected(false);\n    });\n\n    newSocket.on('init-document', (doc: DocumentState) => {\n      setDocumentState(doc);\n      setUsers(doc.users);\n    });\n\n    newSocket.on('user-joined', (updatedUsers: User[]) => {\n      setUsers(updatedUsers);\n    });\n\n    newSocket.on('user-left', (updatedUsers: User[]) => {\n      setUsers(updatedUsers);\n    });\n\n    newSocket.on('content-change', (data: { content: string; userId: string }) => {\n      setDocumentState(prev => prev ? { ...prev, content: data.content } : null);\n    });\n\n    newSocket.on('cursor-update', (data: { userId: string; position: { line: number; ch: number } }) => {\n      setUsers(prev => {\n        return prev.map(user => {\n          if (user.id === data.userId) {\n            return { ...user, cursorPosition: data.position };\n          }\n          return user;\n        });\n      });\n    });\n  };\n\n  const updateContent = (content: string) => {\n    if (socket && isConnected) {\n      socket.emit('content-change', content);\n      setDocumentState(prev => prev ? { ...prev, content } : null);\n    }\n  };\n\n  const updateCursorPosition = (position: { line: number; ch: number }) => {\n    if (socket && isConnected && currentUser) {\n      socket.emit('cursor-move', position);\n      setCurrentUser({ ...currentUser, cursorPosition: position });\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, [socket]);\n\n  return (\n    <SocketContext.Provider\n      value={{\n        socket,\n        isConnected,\n        documentState,\n        currentUser,\n        users,\n        connectToServer,\n        updateContent,\n        updateCursorPosition,\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}